---
/* Imports */
import SiteShell from '@/layouts/SiteShell.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import imageUrlBuilder from '@sanity/image-url';

/* Sanity config */
const projectId = 'tvtqrltk';
const dataset = 'production';

const builder = imageUrlBuilder({ projectId, dataset });
function urlForImage(source: any) {
  return builder.image(source);
}

/* Fetch projects from Sanity */
const query = `*[_type == "project"] | order(title asc){
  _id,
  title,
  description,
  category,
  image,
  slug
}`;
const url = `https://${projectId}.api.sanity.io/v2021-10-21/data/query/${dataset}?query=${encodeURIComponent(query)}`;
const res = await fetch(url);
const { result: projects } = await res.json();

const corporateProjects = projects.filter(
  (p: any) => p.category === 'corporate',
);
const personalProjects = projects.filter((p: any) => p.category === 'personal');

/* Dribbble fetch */
const token = import.meta.env.DRIBBBLE_TOKEN as string;
const dribbbleRes = await fetch('https://api.dribbble.com/v2/user/shots', {
  headers: { Authorization: `Bearer ${token}` },
});
const dribbbleData = await dribbbleRes.json();
const dribbbleShots = Array.isArray(dribbbleData) ? dribbbleData : [];

/* Hero headline for a11y/SEO (visual is in the video) */
const headlineAlt =
  'Screens with a pulse — Alan Rivero Gorinstein · UX Designer';
---

<section
  id="hero"
  class="relative flex items-center justify-center min-h-[82vh] bg-white"
  aria-label="Intro hero"
>
  <div
    class="w-full max-w-screen-xl mx-auto px-8 py-24 md:py-32 flex flex-col items-center"
  >
    <!-- Logo -->
    <div class="mb-12 md:mb-14">
      <img
        src="/brand/handkerchief_logo.svg"
        alt="Folded handkerchief mark with world map"
        class="w-28 md:w-36 lg:w-44 aspect-square"
        loading="eager"
        decoding="async"
      />
    </div>

    <!-- Headline (keeps presence) -->
    <h1
      class="type-display-serif leading-[1.05] text-6xl md:text-8xl lg:text-9xl mb-7 max-w-4xl text-center mx-auto"
    >
      There is a better way to do everything
    </h1>

    <!-- Body + Signature as a narrow manifesto column -->
    <div class="w-full mx-auto text-left max-w-[60ch] md:max-w-[62ch]">
      <p
        class="type-body text-xl md:text-2xl leading-relaxed mb-8 text-neutral-800"
      >
        Design's most important responsibility is to emphatically remind us of
        these facts: awareness and intention
        <span
          class="bg-gradient-to-r from-current to-current bg-[length:100%_1px] bg-no-repeat bg-bottom pb-[2px]"
        >
          can
        </span>
        be applied. Things
        <span
          class="bg-gradient-to-r from-current to-current bg-[length:100%_1px] bg-no-repeat bg-bottom pb-[2px]"
        >
          can
        </span>
        get better.
      </p>
    </div>

    <p class="type-body text-base md:text-lg text-neutral-900 tracking-wide">
      Alan Rivero Gorinstein · UX Designer
    </p>
  </div>
</section>

<style>
  #hero {
    contain: layout style;
  }
</style>

<SiteShell
  pageTitle="Alan Rivero Gorinstein • Senior UX Designer"
  showNavbar={false}
>
  <!-- NEW: simple, centered nav that flows (not fixed) -->
  <nav id="simple-nav" class="px-8 py-6">
    <div class="flex justify-center items-center gap-6">
      <a
        href="/about"
        class="type-accent text-sm md:text-base font-medium hover:opacity-80 transition"
      >
        About
      </a>
      <a
        href="https://www.linkedin.com/in/alanriverogorinstein/"
        target="_blank"
        rel="noopener noreferrer"
        class="inline-block hover:opacity-80 transition"
        aria-label="LinkedIn"
        title="LinkedIn"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="#2C65BC"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            d="M4.98 3.5C4.98 4.88 3.88 6 2.5 6S0 4.88 0 3.5 1.12 1 2.5 1 4.98 2.12 4.98 3.5zM.5 8h4V24h-4V8zm7.5 0h3.8v2.56h.06c.53-1 1.82-2.06 3.75-2.06 4.01 0 4.75 2.64 4.75 6.08V24h-4v-7.66c0-1.83-.03-4.19-2.55-4.19-2.55 0-2.94 1.99-2.94 4.05V24h-4V8z"
          ></path>
        </svg>
      </a>
    </div>
  </nav>

  <!-- Main content -->
  <main class="px-8 py-16 max-w-screen-2xl mx-auto">
    <h2 class="text-3xl md:text-5xl font-sans tracking-tight mb-8">
      Case studies
    </h2>

    {
      corporateProjects.length > 0 && (
        <>
          {/* Hero Project */}
          <a
            href={`/project/${corporateProjects[0].slug.current}`}
            class="group block hover:opacity-90 transition mb-12"
          >
            <div class="flex flex-col">
              {corporateProjects[0].image && (
                <img
                  src={urlForImage(corporateProjects[0].image)
                    .width(2880)
                    .quality(100)
                    .auto('format')
                    .url()}
                  alt={corporateProjects[0].title}
                  class="w-full aspect-[3/2] md:aspect-[16/9] object-cover mb-6 group-hover:scale-[1.01] transition-transform duration-200"
                />
              )}
              <h3 class="text-2xl md:text-3xl font-sans mb-2 group-hover:underline">
                {corporateProjects[0].title}
              </h3>
              <p class="text-base md:text-lg text-[#4D4D4D]">
                {corporateProjects[0].description}
              </p>
            </div>
          </a>

          {/* Subgrid for remaining projects */}
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">
            {corporateProjects.slice(1).map((project: any) => (
              <a
                href={`/project/${project.slug.current}`}
                class="group block hover:opacity-90 transition"
              >
                <div class="flex flex-col">
                  {project.image && (
                    <img
                      src={urlForImage(project.image)}
                      alt={project.title}
                      class="w-full h-72 object-cover mb-4 group-hover:scale-[1.01] transition-transform duration-200"
                    />
                  )}
                  <h3 class="text-lg md:text-xl font-sans mb-1 group-hover:underline">
                    {project.title}
                  </h3>
                  <p class="text-sm md:text-base text-[#4D4D4D]">
                    {project.description}
                  </p>
                </div>
              </a>
            ))}
          </div>
        </>
      )
    }

    <h2 class="text-3xl md:text-5xl font-sans tracking-tight mb-8">
      Concepts and one-offs
    </h2>

    {
      Array.isArray(dribbbleShots) && dribbbleShots.length > 0 && (
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {dribbbleShots.map((shot: any) => (
            <a
              href={shot.html_url}
              class="group block hover:opacity-90 transition"
              target="_blank"
              key={shot.id}
            >
              <img
                src={shot.images.normal}
                alt={shot.title}
                class="w-full h-72 object-cover mb-3 group-hover:scale-[1.01] transition-transform duration-200"
              />
              <h3 class="text-lg md:text-xl font-sans group-hover:underline">
                {shot.title}
              </h3>
            </a>
          ))}
        </div>
      )
    }
  </main>

  <Footer />
</SiteShell>

<style>
  @media (prefers-reduced-motion: reduce) {
    #hero video {
      display: none;
    }
    #hero {
      background-image: url('/media/hero-poster.jpg');
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
    }
  }
  #hero {
    contain: layout style;
  }
</style>
