---
// Imports
import SiteShell from '@/layouts/SiteShell.astro';
import imageUrlBuilder from '@sanity/image-url';

// Astro's dynamic routing hook
export async function getStaticPaths() {
  const projectId = 'tvtqrltk';
  const dataset = 'production';
  const query = `*[_type == "project"]{ slug }`;
  const url = `https://${projectId}.api.sanity.io/v2021-10-21/data/query/${dataset}?query=${encodeURIComponent(query)}`;
  const res = await fetch(url);
  const { result } = await res.json();

  return result.map(project => ({
    params: { slug: project.slug.current }
  }));
}

// Get slug from URL
const { slug } = Astro.params;

// Now fetch the single project by slug
const projectId = 'tvtqrltk';
const dataset = 'production';

const builder = imageUrlBuilder({ projectId, dataset });
function urlForImage(source) {
  return builder.image(source).width(1000).url();
}

// GROQ query
const query = `*[_type == "project" && slug.current == "${slug}"][0]{
  _id,
  title,
  whatIDid,
  impact,
  platform,
  role,
  yearShipped,
  teamSetup,
  image,
  body
}`;

const url = `https://${projectId}.api.sanity.io/v2021-10-21/data/query/${dataset}?query=${encodeURIComponent(query)}`;
const res = await fetch(url);
const { result: project } = await res.json();

if (!project) {
  throw new Error(`Project not found: ${slug}`);
}
---
<SiteShell title={`Alan Rivero Gorinstein â€¢ ${project.title}`}>
  <!-- Narrow top section -->
  <div class="px-6 py-12 max-w-3xl mx-auto">
    <!-- Title -->
    <h1 class="type-heading-1 mb-4">{project.title}</h1>

    <!-- What I Did / The Impact -->
    <div class="grid md:grid-cols-2 gap-8 mb-8">
      <!-- What I Did -->
      <div>
        <dt class="type-muted mb-1">What I did</dt>
        <dd class="type-body">
          {project.whatIDid}
        </dd>
      </div>
      <!-- The Impact -->
      <div>
        <dt class="type-muted mb-1">The impact</dt>
        <dd class="type-body">
          <ul class="list-disc list-inside space-y-1">
            {project.impact?.map((item: string) => (
              <li>{item}</li>
            ))}
          </ul>
        </dd>
      </div>
    </div>

    <!-- Metadata section -->
    <dl class="type-muted space-y-1 mb-8">
      {project.platform && (
        <div>
          <dt class="font-medium inline">Platform:</dt>
          <dd class="inline ml-1">{project.platform}</dd>
        </div>
      )}
      {project.role && (
        <div>
          <dt class="font-medium inline">Role:</dt>
          <dd class="inline ml-1">{project.role}</dd>
        </div>
      )}
      {project.yearShipped && (
        <div>
          <dt class="font-medium inline">Year Shipped:</dt>
          <dd class="inline ml-1">{project.yearShipped}</dd>
        </div>
      )}
      {project.teamSetup && (
        <div>
          <dt class="font-medium inline">Team Setup:</dt>
          <dd class="inline ml-1">{project.teamSetup}</dd>
        </div>
      )}
    </dl>
  </div>

  <!-- Wide case study body -->
  {project.body && (
    <div class="w-full">
      <div class="max-w-screen-xl px-4 md:px-8 mx-auto">
        <div class="prose prose-lg max-w-none">
          {project.body.map((block: any) => {
            if (block._type === 'block') {
              return <p>{block.children?.[0]?.text}</p>;
            }
            if (block._type === 'image') {
              return <img
                        src={urlForImage(block)}
                        alt=""
                        class="my-8 w-full max-w-none"
                      />;
            }
            if (block._type === 'videoEmbed') {
              const driveEmbedUrl = block.url.replace('/view?usp=sharing', '/preview');
              return (
                <div class="aspect-video my-8">
                  <iframe
                    src={driveEmbedUrl}
                    title="Embedded video"
                    class="w-full h-full rounded-lg"
                    frameborder="0"
                    allowfullscreen
                  />
                </div>
              );
            }
            return null;
          })}
        </div>
      </div>
    </div>
  )}
</SiteShell>
