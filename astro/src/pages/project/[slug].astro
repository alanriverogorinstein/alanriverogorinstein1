---
import Navbar from '../../components/Navbar.astro';
import Footer from '../../components/Footer.astro';
import imageUrlBuilder from '@sanity/image-url';
import "../../styles/global.css";

// Astro's dynamic routing hook
export async function getStaticPaths() {
  const projectId = 'tvtqrltk';
  const dataset = 'production';
  const query = `*[_type == "project"]{ slug }`;
  const url = `https://${projectId}.api.sanity.io/v2021-10-21/data/query/${dataset}?query=${encodeURIComponent(query)}`;
  const res = await fetch(url);
  const { result } = await res.json();

  return result.map(project => ({
    params: { slug: project.slug.current }
  }));
}

// Get slug from URL
const { slug } = Astro.params;

// Now fetch the single project by slug
const projectId = 'tvtqrltk';
const dataset = 'production';

const builder = imageUrlBuilder({ projectId, dataset });
function urlForImage(source) {
  return builder.image(source).width(1000).url();
}

const query = `*[_type == "project" && slug.current == "${slug}"][0]{
  _id,
  title,
  description,
  category,
  image,
  publishedAt,
  body
}`;
const url = `https://${projectId}.api.sanity.io/v2021-10-21/data/query/${dataset}?query=${encodeURIComponent(query)}`;
const res = await fetch(url);
const { result: project } = await res.json();

if (!project) {
  throw new Error(`Project not found: ${slug}`);
}
---
<Navbar />
<html>
  <head>
    <title>{project.title}</title>
  </head>
  <body class="px-6 py-12 max-w-3xl mx-auto">
    <a href="/" class="text-sm text-gray-500 hover:underline">‚Üê Back</a>
    <h1 class="text-3xl font-bold mb-4">{project.title}</h1>
    <p class="text-lg text-gray-700 mb-6">{project.description}</p>

    {project.image && (
      <img
        src={urlForImage(project.image)}
        alt={project.title}
        class="mb-8 rounded-lg w-full object-cover max-h-[400px]"
      />
    )}

    {project.body && (
      <div class="prose prose-lg max-w-3xl mx-auto">
      {project.body.map((block: any) => {
      if (block._type === 'block') {
        return <p>{block.children?.[0]?.text}</p>
      }
      if (block._type === 'image') {
        return <img src={urlForImage(block).url()} alt="" class="my-8 rounded-lg" />
      }
      return null;
    })}
  </div>
)}
  </body>
</html>


